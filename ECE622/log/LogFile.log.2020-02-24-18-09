2020-02-24 18:09:31,399 [main] INFO  (AbstractConfig.java:347) - ProducerConfig values: 
	acks = all
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = KafkaCsvProducer
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2020-02-24 18:09:31,600 [main] INFO  (AppInfoParser.java:117) - Kafka version: 2.4.0
2020-02-24 18:09:31,600 [main] INFO  (AppInfoParser.java:118) - Kafka commitId: 77a89fcf8d7fa018
2020-02-24 18:09:31,603 [main] INFO  (AppInfoParser.java:119) - Kafka startTimeMs: 1582560571591
2020-02-24 18:09:47,484 [main] WARN  (FlinkKafkaProducer.java:667) - Property [transaction.timeout.ms] not specified. Setting it to 3600000 ms
2020-02-24 18:09:47,490 [main] WARN  (FlinkKafkaProducer.java:667) - Property [transaction.timeout.ms] not specified. Setting it to 3600000 ms
2020-02-24 18:09:47,746 [main] INFO  (TypeExtractor.java:1818) - class org.apache.flink.streaming.api.datastream.CoGroupedStreams$TaggedUnion does not contain a setter for field one
2020-02-24 18:09:47,746 [main] INFO  (TypeExtractor.java:1857) - Class class org.apache.flink.streaming.api.datastream.CoGroupedStreams$TaggedUnion cannot be used as a POJO type because not all fields are valid POJO fields, and must be processed as GenericType. Please read the Flink documentation on "Data Types & Serialization" for details of the effect on performance.
2020-02-24 18:09:47,749 [main] INFO  (TypeExtractor.java:1818) - class org.apache.flink.streaming.api.datastream.CoGroupedStreams$TaggedUnion does not contain a setter for field one
2020-02-24 18:09:47,749 [main] INFO  (TypeExtractor.java:1857) - Class class org.apache.flink.streaming.api.datastream.CoGroupedStreams$TaggedUnion cannot be used as a POJO type because not all fields are valid POJO fields, and must be processed as GenericType. Please read the Flink documentation on "Data Types & Serialization" for details of the effect on performance.
2020-02-24 18:09:47,957 [main] INFO  (LocalStreamEnvironment.java:108) - Running job on local embedded Flink mini cluster
2020-02-24 18:09:48,514 [main] INFO  (MiniCluster.java:253) - Starting Flink Mini Cluster
2020-02-24 18:09:48,518 [main] INFO  (MiniCluster.java:262) - Starting Metrics Registry
2020-02-24 18:09:48,610 [main] INFO  (MetricRegistryImpl.java:114) - No metrics reporter configured, no metrics will be exposed/reported.
2020-02-24 18:09:48,610 [main] INFO  (MiniCluster.java:266) - Starting RPC Service(s)
2020-02-24 18:09:49,389 [flink-akka.actor.default-dispatcher-2] INFO  (Slf4jLogger.scala:92) - Slf4jLogger started
2020-02-24 18:09:50,054 [main] INFO  (BootstrapTools.java:244) - Trying to start actor system at :0
2020-02-24 18:09:50,131 [flink-metrics-2] INFO  (Slf4jLogger.scala:92) - Slf4jLogger started
2020-02-24 18:09:50,153 [flink-metrics-2] INFO  (MarkerIgnoringBase.java:107) - Starting remoting
2020-02-24 18:09:50,334 [flink-metrics-2] INFO  (MarkerIgnoringBase.java:107) - Remoting started; listening on addresses :[akka.tcp://flink-metrics@127.0.1.1:43897]
2020-02-24 18:09:50,368 [main] INFO  (BootstrapTools.java:256) - Actor system started at akka.tcp://flink-metrics@127.0.1.1:43897
2020-02-24 18:09:50,375 [main] INFO  (AkkaRpcService.java:223) - Starting RPC endpoint for org.apache.flink.runtime.metrics.dump.MetricQueryService at akka://flink-metrics/user/MetricQueryService .
2020-02-24 18:09:50,388 [main] INFO  (MiniCluster.java:397) - Starting high-availability services
2020-02-24 18:09:50,404 [main] INFO  (BlobServer.java:141) - Created BLOB server storage directory /tmp/blobStore-a7f15fac-f662-40a0-ba93-950698ea38fa
2020-02-24 18:09:50,408 [main] INFO  (BlobServer.java:203) - Started BLOB server at 0.0.0.0:41915 - max concurrent requests: 50 - max backlog: 1000
2020-02-24 18:09:50,411 [main] INFO  (AbstractBlobCache.java:107) - Created BLOB cache storage directory /tmp/blobStore-73c339f2-fc54-472f-8e1c-e90c185bc255
2020-02-24 18:09:50,412 [main] INFO  (AbstractBlobCache.java:107) - Created BLOB cache storage directory /tmp/blobStore-0739fa39-cb08-452c-81c4-da3d8161095c
2020-02-24 18:09:50,412 [main] INFO  (MiniCluster.java:479) - Starting 1 TaskManger(s)
2020-02-24 18:09:50,426 [main] INFO  (TaskManagerRunner.java:351) - Starting TaskManager with ResourceID: d442f059-6ee0-47c2-9f2d-dc8a5d603a5e
2020-02-24 18:09:50,597 [main] INFO  (TaskManagerServices.java:519) - Temporary file directory '/tmp': total 439 GB, usable 336 GB (76.54% usable)
2020-02-24 18:09:50,606 [main] INFO  (FileChannelManagerImpl.java:76) - FileChannelManager uses directory /tmp/flink-io-a09453de-0ac0-40bf-917c-f64d2416268f for spill files.
2020-02-24 18:09:50,675 [main] INFO  (FileChannelManagerImpl.java:76) - FileChannelManager uses directory /tmp/flink-netty-shuffle-dbf549df-a83d-4762-8a0b-e05e9c5f0402 for spill files.
2020-02-24 18:09:50,856 [main] INFO  (NetworkBufferPool.java:140) - Allocated 191 MB for network buffer pool (number of memory segments: 6113, bytes per segment: 32768).
2020-02-24 18:09:50,938 [main] INFO  (NettyShuffleEnvironment.java:283) - Starting the network environment and its components.
2020-02-24 18:09:50,975 [main] INFO  (KvStateService.java:89) - Starting the kvState service and its components.
2020-02-24 18:09:50,981 [main] INFO  (TaskManagerServices.java:364) - Limiting managed memory to 0.7 of the currently free heap space (1198 MB), memory will be allocated lazily.
2020-02-24 18:09:51,036 [main] INFO  (TaskManagerConfiguration.java:197) - Messages have a max timeout of 10000 ms
2020-02-24 18:09:51,060 [main] INFO  (AkkaRpcService.java:223) - Starting RPC endpoint for org.apache.flink.runtime.taskexecutor.TaskExecutor at akka://flink/user/taskmanager_0 .
2020-02-24 18:09:51,095 [flink-akka.actor.default-dispatcher-2] INFO  (JobLeaderService.java:125) - Start job leader service.
2020-02-24 18:09:51,096 [flink-akka.actor.default-dispatcher-2] INFO  (FileCache.java:107) - User file cache uses directory /tmp/flink-dist-cache-b2d9e2ac-c0e2-4aa7-a194-4c52a9029e1b
2020-02-24 18:09:51,126 [main] INFO  (RestServerEndpoint.java:454) - Upload directory /tmp/flink-web-upload does not exist. 
2020-02-24 18:09:51,127 [main] INFO  (RestServerEndpoint.java:476) - Created directory /tmp/flink-web-upload for file uploads.
2020-02-24 18:09:51,185 [main] INFO  (RestServerEndpoint.java:136) - Starting rest endpoint.
2020-02-24 18:09:51,411 [main] WARN  (WebMonitorUtils.java:87) - Log file environment variable 'log.file' is not set.
2020-02-24 18:09:51,411 [main] WARN  (WebMonitorUtils.java:93) - JobManager log files are unavailable in the web dashboard. Log file location not found in environment variable 'log.file' or configuration key 'Key: 'web.log.path' , default: null (fallback keys: [{key=jobmanager.web.log.path, isDeprecated=true}])'.
2020-02-24 18:09:51,425 [main] INFO  (DispatcherRestEndpoint.java:113) - Failed to load web based job submission extension. Probable reason: flink-runtime-web is not in the classpath.
2020-02-24 18:09:51,588 [main] INFO  (RestServerEndpoint.java:233) - Rest endpoint listening at localhost:43079
2020-02-24 18:09:51,598 [main] INFO  (EmbeddedLeaderService.java:300) - Proposing leadership to contender org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint@4f4c789f @ http://localhost:43079
2020-02-24 18:09:51,615 [mini-cluster-io-thread-1] INFO  (WebMonitorEndpoint.java:712) - http://localhost:43079 was granted leadership with leaderSessionID=4c8a5b0e-8e03-4eab-9f7d-0d2f9b191b78
2020-02-24 18:09:51,615 [mini-cluster-io-thread-1] INFO  (EmbeddedLeaderService.java:250) - Received confirmation of leadership for leader http://localhost:43079 , session=4c8a5b0e-8e03-4eab-9f7d-0d2f9b191b78
2020-02-24 18:09:51,626 [main] INFO  (AkkaRpcService.java:223) - Starting RPC endpoint for org.apache.flink.runtime.resourcemanager.StandaloneResourceManager at akka://flink/user/resourcemanager .
2020-02-24 18:09:51,655 [main] INFO  (AkkaRpcService.java:223) - Starting RPC endpoint for org.apache.flink.runtime.dispatcher.StandaloneDispatcher at akka://flink/user/dispatcher .
2020-02-24 18:09:51,666 [flink-akka.actor.default-dispatcher-2] INFO  (EmbeddedLeaderService.java:300) - Proposing leadership to contender org.apache.flink.runtime.resourcemanager.StandaloneResourceManager@1324ef2e @ akka://flink/user/resourcemanager
2020-02-24 18:09:51,667 [flink-akka.actor.default-dispatcher-3] INFO  (EmbeddedLeaderService.java:300) - Proposing leadership to contender org.apache.flink.runtime.dispatcher.StandaloneDispatcher@36bcd656 @ akka://flink/user/dispatcher
2020-02-24 18:09:51,672 [flink-akka.actor.default-dispatcher-2] INFO  (ResourceManager.java:925) - ResourceManager akka://flink/user/resourcemanager was granted leadership with fencing token bce89ffed458c01f749b8f55495c49f1
2020-02-24 18:09:51,674 [flink-akka.actor.default-dispatcher-3] INFO  (Dispatcher.java:884) - Dispatcher akka://flink/user/dispatcher was granted leadership with fencing token 9161079c-cab9-407f-86f3-e584fe84dce7
2020-02-24 18:09:51,683 [flink-akka.actor.default-dispatcher-3] INFO  (Dispatcher.java:716) - Recovering all persisted jobs.
2020-02-24 18:09:51,685 [flink-akka.actor.default-dispatcher-4] INFO  (EmbeddedLeaderService.java:250) - Received confirmation of leadership for leader akka://flink/user/dispatcher , session=9161079c-cab9-407f-86f3-e584fe84dce7
2020-02-24 18:09:51,687 [main] INFO  (MiniCluster.java:362) - Flink Mini Cluster started successfully
2020-02-24 18:09:51,696 [flink-akka.actor.default-dispatcher-2] INFO  (SlotManagerImpl.java:219) - Starting the SlotManager.
2020-02-24 18:09:51,701 [flink-akka.actor.default-dispatcher-2] INFO  (EmbeddedLeaderService.java:250) - Received confirmation of leadership for leader akka://flink/user/resourcemanager , session=749b8f55-495c-49f1-bce8-9ffed458c01f
2020-02-24 18:09:51,705 [flink-akka.actor.default-dispatcher-4] INFO  (TaskExecutor.java:991) - Connecting to ResourceManager akka://flink/user/resourcemanager(bce89ffed458c01f749b8f55495c49f1).
2020-02-24 18:09:51,738 [flink-akka.actor.default-dispatcher-2] INFO  (RetryingRegistration.java:155) - Resolved ResourceManager address, beginning registration
2020-02-24 18:09:51,738 [flink-akka.actor.default-dispatcher-2] INFO  (RetryingRegistration.java:204) - Registration at ResourceManager attempt 1 (timeout=100ms)
2020-02-24 18:09:51,744 [flink-akka.actor.default-dispatcher-3] INFO  (ResourceManager.java:717) - Registering TaskManager with ResourceID d442f059-6ee0-47c2-9f2d-dc8a5d603a5e (akka://flink/user/taskmanager_0) at ResourceManager
2020-02-24 18:09:51,749 [flink-akka.actor.default-dispatcher-3] INFO  (TaskExecutorToResourceManagerConnection.java:100) - Successful registration at resource manager akka://flink/user/resourcemanager under registration id 1a5e45bb1776c37b91ae9a595040c13a.
2020-02-24 18:09:51,751 [flink-akka.actor.default-dispatcher-2] INFO  (Dispatcher.java:264) - Received JobGraph submission 9e3a9ff03f98575487efa2fce7de860c (Streaming for Random Sampling).
2020-02-24 18:09:51,753 [flink-akka.actor.default-dispatcher-2] INFO  (Dispatcher.java:321) - Submitting job 9e3a9ff03f98575487efa2fce7de860c (Streaming for Random Sampling).
2020-02-24 18:09:51,774 [flink-akka.actor.default-dispatcher-4] INFO  (AkkaRpcService.java:223) - Starting RPC endpoint for org.apache.flink.runtime.jobmaster.JobMaster at akka://flink/user/jobmanager_1 .
2020-02-24 18:09:51,828 [flink-akka.actor.default-dispatcher-4] INFO  (JobMaster.java:242) - Initializing job Streaming for Random Sampling (9e3a9ff03f98575487efa2fce7de860c).
2020-02-24 18:09:51,850 [flink-akka.actor.default-dispatcher-4] INFO  (LegacyScheduler.java:171) - Using restart strategy NoRestartStrategy for Streaming for Random Sampling (9e3a9ff03f98575487efa2fce7de860c).
2020-02-24 18:09:51,874 [flink-akka.actor.default-dispatcher-4] INFO  (ExecutionGraph.java:519) - Job recovers via failover strategy: full graph restart
2020-02-24 18:09:51,903 [flink-akka.actor.default-dispatcher-4] INFO  (ExecutionGraphBuilder.java:204) - Running initialization on master for job Streaming for Random Sampling (9e3a9ff03f98575487efa2fce7de860c).
2020-02-24 18:09:51,903 [flink-akka.actor.default-dispatcher-4] INFO  (ExecutionGraphBuilder.java:222) - Successfully ran initialization on master in 0 ms.
2020-02-24 18:09:51,956 [flink-akka.actor.default-dispatcher-4] INFO  (StateBackendLoader.java:227) - No state backend has been configured, using default (Memory / JobManager) MemoryStateBackend (data in heap memory / checkpoints to JobManager) (checkpoints: 'null', savepoints: 'null', asynchronous: TRUE, maxStateSize: 5242880)
2020-02-24 18:09:51,971 [flink-akka.actor.default-dispatcher-4] INFO  (EmbeddedLeaderService.java:300) - Proposing leadership to contender org.apache.flink.runtime.jobmaster.JobManagerRunner@605243c9 @ akka://flink/user/jobmanager_1
2020-02-24 18:09:51,972 [mini-cluster-io-thread-3] INFO  (JobManagerRunner.java:313) - JobManager runner for job Streaming for Random Sampling (9e3a9ff03f98575487efa2fce7de860c) was granted leadership with session id ba2c4bfa-a9b6-4608-a0fe-fe6d24dc9c53 at akka://flink/user/jobmanager_1.
2020-02-24 18:09:51,977 [flink-akka.actor.default-dispatcher-5] INFO  (JobMaster.java:712) - Starting execution of job Streaming for Random Sampling (9e3a9ff03f98575487efa2fce7de860c) under job master id a0fefe6d24dc9c53ba2c4bfaa9b64608.
2020-02-24 18:09:51,981 [flink-akka.actor.default-dispatcher-5] INFO  (ExecutionGraph.java:1325) - Job Streaming for Random Sampling (9e3a9ff03f98575487efa2fce7de860c) switched from state CREATED to RUNNING.
2020-02-24 18:09:51,987 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4) (cb566a2f45afc48dd3d5ef6d2a363d3e) switched from CREATED to SCHEDULED.
2020-02-24 18:09:52,001 [flink-akka.actor.default-dispatcher-5] INFO  (SlotPoolImpl.java:369) - Cannot serve slot request, no ResourceManager connected. Adding as pending request [SlotRequestId{1448289169abd81e7d344500e4e89a52}]
2020-02-24 18:09:52,007 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4) (fc118126ca89817d8f2472ee8dd7f390) switched from CREATED to SCHEDULED.
2020-02-24 18:09:52,008 [flink-akka.actor.default-dispatcher-5] INFO  (SlotPoolImpl.java:369) - Cannot serve slot request, no ResourceManager connected. Adding as pending request [SlotRequestId{b00d01ef0a2a592114c822b577c7cd65}]
2020-02-24 18:09:52,008 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4) (da9bf137aa325e259a7f517cc3eb3db0) switched from CREATED to SCHEDULED.
2020-02-24 18:09:52,008 [flink-akka.actor.default-dispatcher-5] INFO  (SlotPoolImpl.java:369) - Cannot serve slot request, no ResourceManager connected. Adding as pending request [SlotRequestId{dbf65d05013b123a60e12401606136b9}]
2020-02-24 18:09:52,009 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4) (1cca817b1d5d7308f0cf49ab708648a9) switched from CREATED to SCHEDULED.
2020-02-24 18:09:52,009 [flink-akka.actor.default-dispatcher-5] INFO  (SlotPoolImpl.java:369) - Cannot serve slot request, no ResourceManager connected. Adding as pending request [SlotRequestId{19fef0d9224f1e2308fd0a7bd5b48d2e}]
2020-02-24 18:09:52,009 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (1/4) (307a88beda66e67001d6ec04512b04a0) switched from CREATED to SCHEDULED.
2020-02-24 18:09:52,010 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (2/4) (e2ab82fcc09d56301447aa15bab8154e) switched from CREATED to SCHEDULED.
2020-02-24 18:09:52,010 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (3/4) (830c04ce1bda6d181f7d0931ce6116f9) switched from CREATED to SCHEDULED.
2020-02-24 18:09:52,010 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (4/4) (b8e0dab09249005e3b16468d18641d2c) switched from CREATED to SCHEDULED.
2020-02-24 18:09:52,011 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (1/4) (0c96c7f408548e87994a79727c1444be) switched from CREATED to SCHEDULED.
2020-02-24 18:09:52,011 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (2/4) (3acd3a1685a8a09503a7d2ecc4f5cf78) switched from CREATED to SCHEDULED.
2020-02-24 18:09:52,011 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (3/4) (890f2cab199cdc6ec05f1d2663a2d067) switched from CREATED to SCHEDULED.
2020-02-24 18:09:52,011 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (4/4) (d0a76192b5cfd1bd9c88c2b9d66ce3fb) switched from CREATED to SCHEDULED.
2020-02-24 18:09:52,011 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4) (e5a6fd7de60f46dadb9bc9f86aba9ddb) switched from CREATED to SCHEDULED.
2020-02-24 18:09:52,011 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4) (e8eb57860788ee73e284e93956177888) switched from CREATED to SCHEDULED.
2020-02-24 18:09:52,012 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4) (0a2b6113d83c6a3c5232bf5e478f5e9e) switched from CREATED to SCHEDULED.
2020-02-24 18:09:52,013 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4) (0a7e90902ab4834021545ba8c762a6c6) switched from CREATED to SCHEDULED.
2020-02-24 18:09:52,021 [jobmanager-future-thread-1] INFO  (EmbeddedLeaderService.java:250) - Received confirmation of leadership for leader akka://flink/user/jobmanager_1 , session=ba2c4bfa-a9b6-4608-a0fe-fe6d24dc9c53
2020-02-24 18:09:52,021 [flink-akka.actor.default-dispatcher-5] INFO  (JobMaster.java:936) - Connecting to ResourceManager akka://flink/user/resourcemanager(bce89ffed458c01f749b8f55495c49f1)
2020-02-24 18:09:52,024 [flink-akka.actor.default-dispatcher-5] INFO  (RetryingRegistration.java:155) - Resolved ResourceManager address, beginning registration
2020-02-24 18:09:52,024 [flink-akka.actor.default-dispatcher-5] INFO  (RetryingRegistration.java:204) - Registration at ResourceManager attempt 1 (timeout=100ms)
2020-02-24 18:09:52,026 [flink-akka.actor.default-dispatcher-2] INFO  (ResourceManager.java:306) - Registering job manager a0fefe6d24dc9c53ba2c4bfaa9b64608@akka://flink/user/jobmanager_1 for job 9e3a9ff03f98575487efa2fce7de860c.
2020-02-24 18:09:52,034 [flink-akka.actor.default-dispatcher-2] INFO  (ResourceManager.java:661) - Registered job manager a0fefe6d24dc9c53ba2c4bfaa9b64608@akka://flink/user/jobmanager_1 for job 9e3a9ff03f98575487efa2fce7de860c.
2020-02-24 18:09:52,036 [flink-akka.actor.default-dispatcher-2] INFO  (JobMaster.java:958) - JobManager successfully registered at ResourceManager, leader id: bce89ffed458c01f749b8f55495c49f1.
2020-02-24 18:09:52,037 [flink-akka.actor.default-dispatcher-2] INFO  (SlotPoolImpl.java:319) - Requesting new slot [SlotRequestId{1448289169abd81e7d344500e4e89a52}] and profile ResourceProfile{cpuCores=-1.0, heapMemoryInMB=-1, directMemoryInMB=-1, nativeMemoryInMB=-1, networkMemoryInMB=-1, managedMemoryInMB=-1} from resource manager.
2020-02-24 18:09:52,044 [flink-akka.actor.default-dispatcher-5] INFO  (ResourceManager.java:441) - Request slot with profile ResourceProfile{cpuCores=-1.0, heapMemoryInMB=-1, directMemoryInMB=-1, nativeMemoryInMB=-1, networkMemoryInMB=-1, managedMemoryInMB=-1} for job 9e3a9ff03f98575487efa2fce7de860c with allocation id 8ed20fb7eb0151ed54282da65f8fdf43.
2020-02-24 18:09:52,044 [flink-akka.actor.default-dispatcher-2] INFO  (SlotPoolImpl.java:319) - Requesting new slot [SlotRequestId{b00d01ef0a2a592114c822b577c7cd65}] and profile ResourceProfile{cpuCores=-1.0, heapMemoryInMB=-1, directMemoryInMB=-1, nativeMemoryInMB=-1, networkMemoryInMB=-1, managedMemoryInMB=-1} from resource manager.
2020-02-24 18:09:52,049 [flink-akka.actor.default-dispatcher-2] INFO  (SlotPoolImpl.java:319) - Requesting new slot [SlotRequestId{dbf65d05013b123a60e12401606136b9}] and profile ResourceProfile{cpuCores=-1.0, heapMemoryInMB=-1, directMemoryInMB=-1, nativeMemoryInMB=-1, networkMemoryInMB=-1, managedMemoryInMB=-1} from resource manager.
2020-02-24 18:09:52,050 [flink-akka.actor.default-dispatcher-2] INFO  (SlotPoolImpl.java:319) - Requesting new slot [SlotRequestId{19fef0d9224f1e2308fd0a7bd5b48d2e}] and profile ResourceProfile{cpuCores=-1.0, heapMemoryInMB=-1, directMemoryInMB=-1, nativeMemoryInMB=-1, networkMemoryInMB=-1, managedMemoryInMB=-1} from resource manager.
2020-02-24 18:09:52,056 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:822) - Receive slot request 8ed20fb7eb0151ed54282da65f8fdf43 for job 9e3a9ff03f98575487efa2fce7de860c from resource manager with leader id bce89ffed458c01f749b8f55495c49f1.
2020-02-24 18:09:52,058 [flink-akka.actor.default-dispatcher-5] INFO  (ResourceManager.java:441) - Request slot with profile ResourceProfile{cpuCores=-1.0, heapMemoryInMB=-1, directMemoryInMB=-1, nativeMemoryInMB=-1, networkMemoryInMB=-1, managedMemoryInMB=-1} for job 9e3a9ff03f98575487efa2fce7de860c with allocation id 9b9e79287570604f1051d19c555d661a.
2020-02-24 18:09:52,059 [flink-akka.actor.default-dispatcher-5] INFO  (ResourceManager.java:441) - Request slot with profile ResourceProfile{cpuCores=-1.0, heapMemoryInMB=-1, directMemoryInMB=-1, nativeMemoryInMB=-1, networkMemoryInMB=-1, managedMemoryInMB=-1} for job 9e3a9ff03f98575487efa2fce7de860c with allocation id d66920793d62b333513e101ede822882.
2020-02-24 18:09:52,060 [flink-akka.actor.default-dispatcher-5] INFO  (ResourceManager.java:441) - Request slot with profile ResourceProfile{cpuCores=-1.0, heapMemoryInMB=-1, directMemoryInMB=-1, nativeMemoryInMB=-1, networkMemoryInMB=-1, managedMemoryInMB=-1} for job 9e3a9ff03f98575487efa2fce7de860c with allocation id ab7fe9fb00f502b0db5a3bd40710204d.
2020-02-24 18:09:52,061 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:834) - Allocated slot for 8ed20fb7eb0151ed54282da65f8fdf43.
2020-02-24 18:09:52,061 [flink-akka.actor.default-dispatcher-2] INFO  (JobLeaderService.java:193) - Add job 9e3a9ff03f98575487efa2fce7de860c for job leader monitoring.
2020-02-24 18:09:52,063 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:822) - Receive slot request 9b9e79287570604f1051d19c555d661a for job 9e3a9ff03f98575487efa2fce7de860c from resource manager with leader id bce89ffed458c01f749b8f55495c49f1.
2020-02-24 18:09:52,064 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:834) - Allocated slot for 9b9e79287570604f1051d19c555d661a.
2020-02-24 18:09:52,065 [flink-akka.actor.default-dispatcher-2] INFO  (JobLeaderService.java:193) - Add job 9e3a9ff03f98575487efa2fce7de860c for job leader monitoring.
2020-02-24 18:09:52,064 [mini-cluster-io-thread-4] INFO  (JobLeaderService.java:333) - Try to register at job manager akka://flink/user/jobmanager_1 with leader id ba2c4bfa-a9b6-4608-a0fe-fe6d24dc9c53.
2020-02-24 18:09:52,066 [mini-cluster-io-thread-4] WARN  (EmbeddedLeaderService.java:516) - Error notifying leader listener about new leader
java.lang.IllegalStateException: The RPC connection is already closed
	at org.apache.flink.util.Preconditions.checkState(Preconditions.java:195)
	at org.apache.flink.runtime.registration.RegisteredRpcConnection.start(RegisteredRpcConnection.java:90)
	at org.apache.flink.runtime.taskexecutor.JobLeaderService$JobManagerLeaderListener.notifyLeaderAddress(JobLeaderService.java:334)
	at org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService$NotifyOfLeaderCall.run(EmbeddedLeaderService.java:513)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1626)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-02-24 18:09:52,065 [mini-cluster-io-thread-3] INFO  (JobLeaderService.java:333) - Try to register at job manager akka://flink/user/jobmanager_1 with leader id ba2c4bfa-a9b6-4608-a0fe-fe6d24dc9c53.
2020-02-24 18:09:52,066 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:822) - Receive slot request d66920793d62b333513e101ede822882 for job 9e3a9ff03f98575487efa2fce7de860c from resource manager with leader id bce89ffed458c01f749b8f55495c49f1.
2020-02-24 18:09:52,069 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:834) - Allocated slot for d66920793d62b333513e101ede822882.
2020-02-24 18:09:52,069 [flink-akka.actor.default-dispatcher-2] INFO  (JobLeaderService.java:193) - Add job 9e3a9ff03f98575487efa2fce7de860c for job leader monitoring.
2020-02-24 18:09:52,070 [mini-cluster-io-thread-3] INFO  (JobLeaderService.java:333) - Try to register at job manager akka://flink/user/jobmanager_1 with leader id ba2c4bfa-a9b6-4608-a0fe-fe6d24dc9c53.
2020-02-24 18:09:52,070 [flink-akka.actor.default-dispatcher-4] INFO  (RetryingRegistration.java:155) - Resolved JobManager address, beginning registration
2020-02-24 18:09:52,070 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:822) - Receive slot request ab7fe9fb00f502b0db5a3bd40710204d for job 9e3a9ff03f98575487efa2fce7de860c from resource manager with leader id bce89ffed458c01f749b8f55495c49f1.
2020-02-24 18:09:52,072 [flink-akka.actor.default-dispatcher-5] INFO  (RetryingRegistration.java:155) - Resolved JobManager address, beginning registration
2020-02-24 18:09:52,072 [flink-akka.actor.default-dispatcher-5] INFO  (RetryingRegistration.java:204) - Registration at JobManager attempt 1 (timeout=100ms)
2020-02-24 18:09:52,072 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:834) - Allocated slot for ab7fe9fb00f502b0db5a3bd40710204d.
2020-02-24 18:09:52,072 [flink-akka.actor.default-dispatcher-2] INFO  (JobLeaderService.java:193) - Add job 9e3a9ff03f98575487efa2fce7de860c for job leader monitoring.
2020-02-24 18:09:52,074 [mini-cluster-io-thread-2] INFO  (JobLeaderService.java:333) - Try to register at job manager akka://flink/user/jobmanager_1 with leader id ba2c4bfa-a9b6-4608-a0fe-fe6d24dc9c53.
2020-02-24 18:09:52,075 [flink-akka.actor.default-dispatcher-3] INFO  (RetryingRegistration.java:155) - Resolved JobManager address, beginning registration
2020-02-24 18:09:52,075 [flink-akka.actor.default-dispatcher-3] INFO  (RetryingRegistration.java:204) - Registration at JobManager attempt 1 (timeout=100ms)
2020-02-24 18:09:52,077 [flink-akka.actor.default-dispatcher-2] INFO  (JobLeaderService.java:382) - Successful registration at job manager akka://flink/user/jobmanager_1 for job 9e3a9ff03f98575487efa2fce7de860c.
2020-02-24 18:09:52,078 [flink-akka.actor.default-dispatcher-3] INFO  (TaskExecutor.java:1227) - Establish JobManager connection for job 9e3a9ff03f98575487efa2fce7de860c.
2020-02-24 18:09:52,082 [flink-akka.actor.default-dispatcher-3] INFO  (TaskExecutor.java:1128) - Offer reserved slots to the leader of job 9e3a9ff03f98575487efa2fce7de860c.
2020-02-24 18:09:52,115 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4) (cb566a2f45afc48dd3d5ef6d2a363d3e) switched from SCHEDULED to DEPLOYING.
2020-02-24 18:09:52,116 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:713) - Deploying Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4) (attempt #0) to d442f059-6ee0-47c2-9f2d-dc8a5d603a5e @ localhost (dataPort=-1)
2020-02-24 18:09:52,130 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4) (fc118126ca89817d8f2472ee8dd7f390) switched from SCHEDULED to DEPLOYING.
2020-02-24 18:09:52,131 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:713) - Deploying Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4) (attempt #0) to d442f059-6ee0-47c2-9f2d-dc8a5d603a5e @ localhost (dataPort=-1)
2020-02-24 18:09:52,131 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4) (da9bf137aa325e259a7f517cc3eb3db0) switched from SCHEDULED to DEPLOYING.
2020-02-24 18:09:52,131 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:713) - Deploying Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4) (attempt #0) to d442f059-6ee0-47c2-9f2d-dc8a5d603a5e @ localhost (dataPort=-1)
2020-02-24 18:09:52,131 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4) (1cca817b1d5d7308f0cf49ab708648a9) switched from SCHEDULED to DEPLOYING.
2020-02-24 18:09:52,132 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:713) - Deploying Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4) (attempt #0) to d442f059-6ee0-47c2-9f2d-dc8a5d603a5e @ localhost (dataPort=-1)
2020-02-24 18:09:52,132 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (1/4) (307a88beda66e67001d6ec04512b04a0) switched from SCHEDULED to DEPLOYING.
2020-02-24 18:09:52,133 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:713) - Deploying Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (1/4) (attempt #0) to d442f059-6ee0-47c2-9f2d-dc8a5d603a5e @ localhost (dataPort=-1)
2020-02-24 18:09:52,134 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (2/4) (e2ab82fcc09d56301447aa15bab8154e) switched from SCHEDULED to DEPLOYING.
2020-02-24 18:09:52,134 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:713) - Deploying Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (2/4) (attempt #0) to d442f059-6ee0-47c2-9f2d-dc8a5d603a5e @ localhost (dataPort=-1)
2020-02-24 18:09:52,137 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (3/4) (830c04ce1bda6d181f7d0931ce6116f9) switched from SCHEDULED to DEPLOYING.
2020-02-24 18:09:52,137 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:713) - Deploying Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (3/4) (attempt #0) to d442f059-6ee0-47c2-9f2d-dc8a5d603a5e @ localhost (dataPort=-1)
2020-02-24 18:09:52,137 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (4/4) (b8e0dab09249005e3b16468d18641d2c) switched from SCHEDULED to DEPLOYING.
2020-02-24 18:09:52,138 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:713) - Deploying Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (4/4) (attempt #0) to d442f059-6ee0-47c2-9f2d-dc8a5d603a5e @ localhost (dataPort=-1)
2020-02-24 18:09:52,138 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (1/4) (0c96c7f408548e87994a79727c1444be) switched from SCHEDULED to DEPLOYING.
2020-02-24 18:09:52,139 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:713) - Deploying Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (1/4) (attempt #0) to d442f059-6ee0-47c2-9f2d-dc8a5d603a5e @ localhost (dataPort=-1)
2020-02-24 18:09:52,140 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (2/4) (3acd3a1685a8a09503a7d2ecc4f5cf78) switched from SCHEDULED to DEPLOYING.
2020-02-24 18:09:52,140 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:713) - Deploying Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (2/4) (attempt #0) to d442f059-6ee0-47c2-9f2d-dc8a5d603a5e @ localhost (dataPort=-1)
2020-02-24 18:09:52,141 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (3/4) (890f2cab199cdc6ec05f1d2663a2d067) switched from SCHEDULED to DEPLOYING.
2020-02-24 18:09:52,141 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:713) - Deploying Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (3/4) (attempt #0) to d442f059-6ee0-47c2-9f2d-dc8a5d603a5e @ localhost (dataPort=-1)
2020-02-24 18:09:52,141 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (4/4) (d0a76192b5cfd1bd9c88c2b9d66ce3fb) switched from SCHEDULED to DEPLOYING.
2020-02-24 18:09:52,142 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:713) - Deploying Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (4/4) (attempt #0) to d442f059-6ee0-47c2-9f2d-dc8a5d603a5e @ localhost (dataPort=-1)
2020-02-24 18:09:52,142 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4) (e5a6fd7de60f46dadb9bc9f86aba9ddb) switched from SCHEDULED to DEPLOYING.
2020-02-24 18:09:52,143 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:713) - Deploying Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4) (attempt #0) to d442f059-6ee0-47c2-9f2d-dc8a5d603a5e @ localhost (dataPort=-1)
2020-02-24 18:09:52,143 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4) (e8eb57860788ee73e284e93956177888) switched from SCHEDULED to DEPLOYING.
2020-02-24 18:09:52,144 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:713) - Deploying Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4) (attempt #0) to d442f059-6ee0-47c2-9f2d-dc8a5d603a5e @ localhost (dataPort=-1)
2020-02-24 18:09:52,145 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4) (0a2b6113d83c6a3c5232bf5e478f5e9e) switched from SCHEDULED to DEPLOYING.
2020-02-24 18:09:52,145 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:713) - Deploying Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4) (attempt #0) to d442f059-6ee0-47c2-9f2d-dc8a5d603a5e @ localhost (dataPort=-1)
2020-02-24 18:09:52,146 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4) (0a7e90902ab4834021545ba8c762a6c6) switched from SCHEDULED to DEPLOYING.
2020-02-24 18:09:52,146 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:713) - Deploying Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4) (attempt #0) to d442f059-6ee0-47c2-9f2d-dc8a5d603a5e @ localhost (dataPort=-1)
2020-02-24 18:09:52,164 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:592) - Received task Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4).
2020-02-24 18:09:52,165 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (Task.java:958) - Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4) (cb566a2f45afc48dd3d5ef6d2a363d3e) switched from CREATED to DEPLOYING.
2020-02-24 18:09:52,165 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (Task.java:586) - Creating FileSystem stream leak safety net for task Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4) (cb566a2f45afc48dd3d5ef6d2a363d3e) [DEPLOYING]
2020-02-24 18:09:52,173 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:592) - Received task Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4).
2020-02-24 18:09:52,182 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:592) - Received task Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4).
2020-02-24 18:09:52,182 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (Task.java:958) - Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4) (da9bf137aa325e259a7f517cc3eb3db0) switched from CREATED to DEPLOYING.
2020-02-24 18:09:52,184 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (Task.java:586) - Creating FileSystem stream leak safety net for task Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4) (da9bf137aa325e259a7f517cc3eb3db0) [DEPLOYING]
2020-02-24 18:09:52,189 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (Task.java:958) - Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4) (fc118126ca89817d8f2472ee8dd7f390) switched from CREATED to DEPLOYING.
2020-02-24 18:09:52,190 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (Task.java:586) - Creating FileSystem stream leak safety net for task Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4) (fc118126ca89817d8f2472ee8dd7f390) [DEPLOYING]
2020-02-24 18:09:52,191 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (Task.java:593) - Loading JAR files for task Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4) (da9bf137aa325e259a7f517cc3eb3db0) [DEPLOYING].
2020-02-24 18:09:52,191 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (Task.java:593) - Loading JAR files for task Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4) (fc118126ca89817d8f2472ee8dd7f390) [DEPLOYING].
2020-02-24 18:09:52,191 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (Task.java:593) - Loading JAR files for task Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4) (cb566a2f45afc48dd3d5ef6d2a363d3e) [DEPLOYING].
2020-02-24 18:09:52,193 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (Task.java:619) - Registering task at network: Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4) (da9bf137aa325e259a7f517cc3eb3db0) [DEPLOYING].
2020-02-24 18:09:52,193 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (Task.java:619) - Registering task at network: Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4) (cb566a2f45afc48dd3d5ef6d2a363d3e) [DEPLOYING].
2020-02-24 18:09:52,195 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:592) - Received task Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4).
2020-02-24 18:09:52,197 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (Task.java:619) - Registering task at network: Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4) (fc118126ca89817d8f2472ee8dd7f390) [DEPLOYING].
2020-02-24 18:09:52,198 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (Task.java:958) - Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4) (1cca817b1d5d7308f0cf49ab708648a9) switched from CREATED to DEPLOYING.
2020-02-24 18:09:52,199 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (Task.java:586) - Creating FileSystem stream leak safety net for task Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4) (1cca817b1d5d7308f0cf49ab708648a9) [DEPLOYING]
2020-02-24 18:09:52,199 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (Task.java:593) - Loading JAR files for task Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4) (1cca817b1d5d7308f0cf49ab708648a9) [DEPLOYING].
2020-02-24 18:09:52,203 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (Task.java:619) - Registering task at network: Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4) (1cca817b1d5d7308f0cf49ab708648a9) [DEPLOYING].
2020-02-24 18:09:52,216 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:592) - Received task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (1/4).
2020-02-24 18:09:52,218 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (1/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (1/4) (307a88beda66e67001d6ec04512b04a0) switched from CREATED to DEPLOYING.
2020-02-24 18:09:52,218 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (1/4)] INFO  (Task.java:586) - Creating FileSystem stream leak safety net for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (1/4) (307a88beda66e67001d6ec04512b04a0) [DEPLOYING]
2020-02-24 18:09:52,219 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (1/4)] INFO  (Task.java:593) - Loading JAR files for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (1/4) (307a88beda66e67001d6ec04512b04a0) [DEPLOYING].
2020-02-24 18:09:52,219 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (1/4)] INFO  (Task.java:619) - Registering task at network: Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (1/4) (307a88beda66e67001d6ec04512b04a0) [DEPLOYING].
2020-02-24 18:09:52,228 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:592) - Received task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (2/4).
2020-02-24 18:09:52,231 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:592) - Received task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (3/4).
2020-02-24 18:09:52,231 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (2/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (2/4) (e2ab82fcc09d56301447aa15bab8154e) switched from CREATED to DEPLOYING.
2020-02-24 18:09:52,231 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (2/4)] INFO  (Task.java:586) - Creating FileSystem stream leak safety net for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (2/4) (e2ab82fcc09d56301447aa15bab8154e) [DEPLOYING]
2020-02-24 18:09:52,232 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (2/4)] INFO  (Task.java:593) - Loading JAR files for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (2/4) (e2ab82fcc09d56301447aa15bab8154e) [DEPLOYING].
2020-02-24 18:09:52,232 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (2/4)] INFO  (Task.java:619) - Registering task at network: Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (2/4) (e2ab82fcc09d56301447aa15bab8154e) [DEPLOYING].
2020-02-24 18:09:52,244 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (3/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (3/4) (830c04ce1bda6d181f7d0931ce6116f9) switched from CREATED to DEPLOYING.
2020-02-24 18:09:52,244 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (3/4)] INFO  (Task.java:586) - Creating FileSystem stream leak safety net for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (3/4) (830c04ce1bda6d181f7d0931ce6116f9) [DEPLOYING]
2020-02-24 18:09:52,249 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (3/4)] INFO  (Task.java:593) - Loading JAR files for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (3/4) (830c04ce1bda6d181f7d0931ce6116f9) [DEPLOYING].
2020-02-24 18:09:52,251 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (3/4)] INFO  (Task.java:619) - Registering task at network: Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (3/4) (830c04ce1bda6d181f7d0931ce6116f9) [DEPLOYING].
2020-02-24 18:09:52,246 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:592) - Received task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (4/4).
2020-02-24 18:09:52,268 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (4/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (4/4) (b8e0dab09249005e3b16468d18641d2c) switched from CREATED to DEPLOYING.
2020-02-24 18:09:52,268 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (4/4)] INFO  (Task.java:586) - Creating FileSystem stream leak safety net for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (4/4) (b8e0dab09249005e3b16468d18641d2c) [DEPLOYING]
2020-02-24 18:09:52,268 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (4/4)] INFO  (Task.java:593) - Loading JAR files for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (4/4) (b8e0dab09249005e3b16468d18641d2c) [DEPLOYING].
2020-02-24 18:09:52,269 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (4/4)] INFO  (Task.java:619) - Registering task at network: Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (4/4) (b8e0dab09249005e3b16468d18641d2c) [DEPLOYING].
2020-02-24 18:09:52,270 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:592) - Received task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (1/4).
2020-02-24 18:09:52,275 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (1/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (1/4) (0c96c7f408548e87994a79727c1444be) switched from CREATED to DEPLOYING.
2020-02-24 18:09:52,276 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (1/4)] INFO  (Task.java:586) - Creating FileSystem stream leak safety net for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (1/4) (0c96c7f408548e87994a79727c1444be) [DEPLOYING]
2020-02-24 18:09:52,277 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (1/4)] INFO  (Task.java:593) - Loading JAR files for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (1/4) (0c96c7f408548e87994a79727c1444be) [DEPLOYING].
2020-02-24 18:09:52,278 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (1/4)] INFO  (Task.java:619) - Registering task at network: Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (1/4) (0c96c7f408548e87994a79727c1444be) [DEPLOYING].
2020-02-24 18:09:52,284 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:592) - Received task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (2/4).
2020-02-24 18:09:52,293 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (Task.java:958) - Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4) (1cca817b1d5d7308f0cf49ab708648a9) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,293 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (Task.java:958) - Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4) (da9bf137aa325e259a7f517cc3eb3db0) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,293 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (Task.java:958) - Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4) (cb566a2f45afc48dd3d5ef6d2a363d3e) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,294 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4) (1cca817b1d5d7308f0cf49ab708648a9) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,295 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4) (da9bf137aa325e259a7f517cc3eb3db0) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,295 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4) (cb566a2f45afc48dd3d5ef6d2a363d3e) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,296 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (2/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (2/4) (3acd3a1685a8a09503a7d2ecc4f5cf78) switched from CREATED to DEPLOYING.
2020-02-24 18:09:52,296 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (2/4)] INFO  (Task.java:586) - Creating FileSystem stream leak safety net for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (2/4) (3acd3a1685a8a09503a7d2ecc4f5cf78) [DEPLOYING]
2020-02-24 18:09:52,296 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (2/4)] INFO  (Task.java:593) - Loading JAR files for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (2/4) (3acd3a1685a8a09503a7d2ecc4f5cf78) [DEPLOYING].
2020-02-24 18:09:52,297 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (1/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (1/4) (307a88beda66e67001d6ec04512b04a0) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,297 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:592) - Received task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (3/4).
2020-02-24 18:09:52,297 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (2/4)] INFO  (Task.java:619) - Registering task at network: Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (2/4) (3acd3a1685a8a09503a7d2ecc4f5cf78) [DEPLOYING].
2020-02-24 18:09:52,297 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (Task.java:958) - Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4) (fc118126ca89817d8f2472ee8dd7f390) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,298 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4) (fc118126ca89817d8f2472ee8dd7f390) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,298 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (StateBackendLoader.java:227) - No state backend has been configured, using default (Memory / JobManager) MemoryStateBackend (data in heap memory / checkpoints to JobManager) (checkpoints: 'null', savepoints: 'null', asynchronous: TRUE, maxStateSize: 5242880)
2020-02-24 18:09:52,301 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (2/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (2/4) (e2ab82fcc09d56301447aa15bab8154e) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,301 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (1/4)] INFO  (StateBackendLoader.java:227) - No state backend has been configured, using default (Memory / JobManager) MemoryStateBackend (data in heap memory / checkpoints to JobManager) (checkpoints: 'null', savepoints: 'null', asynchronous: TRUE, maxStateSize: 5242880)
2020-02-24 18:09:52,301 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (StateBackendLoader.java:227) - No state backend has been configured, using default (Memory / JobManager) MemoryStateBackend (data in heap memory / checkpoints to JobManager) (checkpoints: 'null', savepoints: 'null', asynchronous: TRUE, maxStateSize: 5242880)
2020-02-24 18:09:52,301 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (StateBackendLoader.java:227) - No state backend has been configured, using default (Memory / JobManager) MemoryStateBackend (data in heap memory / checkpoints to JobManager) (checkpoints: 'null', savepoints: 'null', asynchronous: TRUE, maxStateSize: 5242880)
2020-02-24 18:09:52,301 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (StateBackendLoader.java:227) - No state backend has been configured, using default (Memory / JobManager) MemoryStateBackend (data in heap memory / checkpoints to JobManager) (checkpoints: 'null', savepoints: 'null', asynchronous: TRUE, maxStateSize: 5242880)
2020-02-24 18:09:52,302 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (1/4) (307a88beda66e67001d6ec04512b04a0) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,301 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (2/4)] INFO  (StateBackendLoader.java:227) - No state backend has been configured, using default (Memory / JobManager) MemoryStateBackend (data in heap memory / checkpoints to JobManager) (checkpoints: 'null', savepoints: 'null', asynchronous: TRUE, maxStateSize: 5242880)
2020-02-24 18:09:52,303 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (2/4) (e2ab82fcc09d56301447aa15bab8154e) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,304 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (3/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (3/4) (830c04ce1bda6d181f7d0931ce6116f9) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,304 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (3/4)] INFO  (StateBackendLoader.java:227) - No state backend has been configured, using default (Memory / JobManager) MemoryStateBackend (data in heap memory / checkpoints to JobManager) (checkpoints: 'null', savepoints: 'null', asynchronous: TRUE, maxStateSize: 5242880)
2020-02-24 18:09:52,304 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (3/4) (830c04ce1bda6d181f7d0931ce6116f9) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,321 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (1/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (1/4) (0c96c7f408548e87994a79727c1444be) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,321 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (1/4) (0c96c7f408548e87994a79727c1444be) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,321 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (3/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (3/4) (890f2cab199cdc6ec05f1d2663a2d067) switched from CREATED to DEPLOYING.
2020-02-24 18:09:52,321 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (1/4)] INFO  (StateBackendLoader.java:227) - No state backend has been configured, using default (Memory / JobManager) MemoryStateBackend (data in heap memory / checkpoints to JobManager) (checkpoints: 'null', savepoints: 'null', asynchronous: TRUE, maxStateSize: 5242880)
2020-02-24 18:09:52,322 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (3/4)] INFO  (Task.java:586) - Creating FileSystem stream leak safety net for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (3/4) (890f2cab199cdc6ec05f1d2663a2d067) [DEPLOYING]
2020-02-24 18:09:52,336 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (4/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (4/4) (b8e0dab09249005e3b16468d18641d2c) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,338 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (4/4)] INFO  (StateBackendLoader.java:227) - No state backend has been configured, using default (Memory / JobManager) MemoryStateBackend (data in heap memory / checkpoints to JobManager) (checkpoints: 'null', savepoints: 'null', asynchronous: TRUE, maxStateSize: 5242880)
2020-02-24 18:09:52,329 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (2/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (2/4) (3acd3a1685a8a09503a7d2ecc4f5cf78) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,342 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (2/4)] INFO  (StateBackendLoader.java:227) - No state backend has been configured, using default (Memory / JobManager) MemoryStateBackend (data in heap memory / checkpoints to JobManager) (checkpoints: 'null', savepoints: 'null', asynchronous: TRUE, maxStateSize: 5242880)
2020-02-24 18:09:52,345 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (4/4) (b8e0dab09249005e3b16468d18641d2c) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,345 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (2/4) (3acd3a1685a8a09503a7d2ecc4f5cf78) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,322 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:592) - Received task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (4/4).
2020-02-24 18:09:52,337 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (3/4)] INFO  (Task.java:593) - Loading JAR files for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (3/4) (890f2cab199cdc6ec05f1d2663a2d067) [DEPLOYING].
2020-02-24 18:09:52,346 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (3/4)] INFO  (Task.java:619) - Registering task at network: Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (3/4) (890f2cab199cdc6ec05f1d2663a2d067) [DEPLOYING].
2020-02-24 18:09:52,351 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:592) - Received task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4).
2020-02-24 18:09:52,352 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (4/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (4/4) (d0a76192b5cfd1bd9c88c2b9d66ce3fb) switched from CREATED to DEPLOYING.
2020-02-24 18:09:52,352 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (4/4)] INFO  (Task.java:586) - Creating FileSystem stream leak safety net for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (4/4) (d0a76192b5cfd1bd9c88c2b9d66ce3fb) [DEPLOYING]
2020-02-24 18:09:52,352 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (4/4)] INFO  (Task.java:593) - Loading JAR files for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (4/4) (d0a76192b5cfd1bd9c88c2b9d66ce3fb) [DEPLOYING].
2020-02-24 18:09:52,353 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (4/4)] INFO  (Task.java:619) - Registering task at network: Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (4/4) (d0a76192b5cfd1bd9c88c2b9d66ce3fb) [DEPLOYING].
2020-02-24 18:09:52,354 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:592) - Received task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4).
2020-02-24 18:09:52,355 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4) (e5a6fd7de60f46dadb9bc9f86aba9ddb) switched from CREATED to DEPLOYING.
2020-02-24 18:09:52,355 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4)] INFO  (Task.java:586) - Creating FileSystem stream leak safety net for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4) (e5a6fd7de60f46dadb9bc9f86aba9ddb) [DEPLOYING]
2020-02-24 18:09:52,355 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4)] INFO  (Task.java:593) - Loading JAR files for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4) (e5a6fd7de60f46dadb9bc9f86aba9ddb) [DEPLOYING].
2020-02-24 18:09:52,356 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4)] INFO  (Task.java:619) - Registering task at network: Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4) (e5a6fd7de60f46dadb9bc9f86aba9ddb) [DEPLOYING].
2020-02-24 18:09:52,359 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:592) - Received task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4).
2020-02-24 18:09:52,365 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (1/4)] WARN  (TaskMetricGroup.java:143) - The operator name Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) exceeded the 80 characters length limit and was truncated.
2020-02-24 18:09:52,367 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (2/4)] WARN  (TaskMetricGroup.java:143) - The operator name Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) exceeded the 80 characters length limit and was truncated.
2020-02-24 18:09:52,375 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (3/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (3/4) (890f2cab199cdc6ec05f1d2663a2d067) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,375 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (3/4)] INFO  (StateBackendLoader.java:227) - No state backend has been configured, using default (Memory / JobManager) MemoryStateBackend (data in heap memory / checkpoints to JobManager) (checkpoints: 'null', savepoints: 'null', asynchronous: TRUE, maxStateSize: 5242880)
2020-02-24 18:09:52,375 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (3/4) (890f2cab199cdc6ec05f1d2663a2d067) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,377 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4) (e8eb57860788ee73e284e93956177888) switched from CREATED to DEPLOYING.
2020-02-24 18:09:52,378 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4)] INFO  (Task.java:586) - Creating FileSystem stream leak safety net for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4) (e8eb57860788ee73e284e93956177888) [DEPLOYING]
2020-02-24 18:09:52,378 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4)] INFO  (Task.java:593) - Loading JAR files for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4) (e8eb57860788ee73e284e93956177888) [DEPLOYING].
2020-02-24 18:09:52,378 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4)] INFO  (Task.java:619) - Registering task at network: Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4) (e8eb57860788ee73e284e93956177888) [DEPLOYING].
2020-02-24 18:09:52,380 [flink-akka.actor.default-dispatcher-2] INFO  (TaskExecutor.java:592) - Received task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4).
2020-02-24 18:09:52,380 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4) (0a7e90902ab4834021545ba8c762a6c6) switched from CREATED to DEPLOYING.
2020-02-24 18:09:52,380 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4)] INFO  (Task.java:586) - Creating FileSystem stream leak safety net for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4) (0a7e90902ab4834021545ba8c762a6c6) [DEPLOYING]
2020-02-24 18:09:52,380 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4)] INFO  (Task.java:593) - Loading JAR files for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4) (0a7e90902ab4834021545ba8c762a6c6) [DEPLOYING].
2020-02-24 18:09:52,381 [flink-akka.actor.default-dispatcher-2] INFO  (TaskSlotTable.java:242) - Activate slot d66920793d62b333513e101ede822882.
2020-02-24 18:09:52,384 [flink-akka.actor.default-dispatcher-2] INFO  (TaskSlotTable.java:242) - Activate slot ab7fe9fb00f502b0db5a3bd40710204d.
2020-02-24 18:09:52,384 [flink-akka.actor.default-dispatcher-2] INFO  (TaskSlotTable.java:242) - Activate slot 8ed20fb7eb0151ed54282da65f8fdf43.
2020-02-24 18:09:52,385 [flink-akka.actor.default-dispatcher-2] INFO  (TaskSlotTable.java:242) - Activate slot 9b9e79287570604f1051d19c555d661a.
2020-02-24 18:09:52,384 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4) (0a2b6113d83c6a3c5232bf5e478f5e9e) switched from CREATED to DEPLOYING.
2020-02-24 18:09:52,385 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4)] INFO  (Task.java:586) - Creating FileSystem stream leak safety net for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4) (0a2b6113d83c6a3c5232bf5e478f5e9e) [DEPLOYING]
2020-02-24 18:09:52,386 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4)] INFO  (Task.java:593) - Loading JAR files for task Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4) (0a2b6113d83c6a3c5232bf5e478f5e9e) [DEPLOYING].
2020-02-24 18:09:52,384 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4)] INFO  (Task.java:619) - Registering task at network: Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4) (0a7e90902ab4834021545ba8c762a6c6) [DEPLOYING].
2020-02-24 18:09:52,386 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4)] INFO  (Task.java:619) - Registering task at network: Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4) (0a2b6113d83c6a3c5232bf5e478f5e9e) [DEPLOYING].
2020-02-24 18:09:52,385 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (3/4)] WARN  (TaskMetricGroup.java:143) - The operator name Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) exceeded the 80 characters length limit and was truncated.
2020-02-24 18:09:52,386 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (4/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (4/4) (d0a76192b5cfd1bd9c88c2b9d66ce3fb) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,393 [flink-akka.actor.default-dispatcher-2] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (4/4) (d0a76192b5cfd1bd9c88c2b9d66ce3fb) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,393 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (4/4)] INFO  (StateBackendLoader.java:227) - No state backend has been configured, using default (Memory / JobManager) MemoryStateBackend (data in heap memory / checkpoints to JobManager) (checkpoints: 'null', savepoints: 'null', asynchronous: TRUE, maxStateSize: 5242880)
2020-02-24 18:09:52,394 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4) (0a2b6113d83c6a3c5232bf5e478f5e9e) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,394 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4) (e5a6fd7de60f46dadb9bc9f86aba9ddb) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,395 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4)] INFO  (StateBackendLoader.java:227) - No state backend has been configured, using default (Memory / JobManager) MemoryStateBackend (data in heap memory / checkpoints to JobManager) (checkpoints: 'null', savepoints: 'null', asynchronous: TRUE, maxStateSize: 5242880)
2020-02-24 18:09:52,395 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4) (0a7e90902ab4834021545ba8c762a6c6) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,395 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4) (e5a6fd7de60f46dadb9bc9f86aba9ddb) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,396 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4)] INFO  (StateBackendLoader.java:227) - No state backend has been configured, using default (Memory / JobManager) MemoryStateBackend (data in heap memory / checkpoints to JobManager) (checkpoints: 'null', savepoints: 'null', asynchronous: TRUE, maxStateSize: 5242880)
2020-02-24 18:09:52,396 [flink-akka.actor.default-dispatcher-5] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4) (0a7e90902ab4834021545ba8c762a6c6) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,398 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4)] INFO  (Task.java:958) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4) (e8eb57860788ee73e284e93956177888) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,398 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4)] INFO  (StateBackendLoader.java:227) - No state backend has been configured, using default (Memory / JobManager) MemoryStateBackend (data in heap memory / checkpoints to JobManager) (checkpoints: 'null', savepoints: 'null', asynchronous: TRUE, maxStateSize: 5242880)
2020-02-24 18:09:52,398 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (4/4)] WARN  (TaskMetricGroup.java:143) - The operator name Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) exceeded the 80 characters length limit and was truncated.
2020-02-24 18:09:52,398 [flink-akka.actor.default-dispatcher-2] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4) (e8eb57860788ee73e284e93956177888) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,404 [flink-akka.actor.default-dispatcher-3] INFO  (Execution.java:1509) - Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4) (0a2b6113d83c6a3c5232bf5e478f5e9e) switched from DEPLOYING to RUNNING.
2020-02-24 18:09:52,405 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4)] INFO  (StateBackendLoader.java:227) - No state backend has been configured, using default (Memory / JobManager) MemoryStateBackend (data in heap memory / checkpoints to JobManager) (checkpoints: 'null', savepoints: 'null', asynchronous: TRUE, maxStateSize: 5242880)
2020-02-24 18:09:52,407 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] WARN  (FlinkKafkaProducer.java:998) - Using EXACTLY_ONCE semantic, but checkpointing is not enabled. Switching to NONE semantic.
2020-02-24 18:09:52,408 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] WARN  (FlinkKafkaProducer.java:998) - Using EXACTLY_ONCE semantic, but checkpointing is not enabled. Switching to NONE semantic.
2020-02-24 18:09:52,408 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] WARN  (FlinkKafkaProducer.java:998) - Using EXACTLY_ONCE semantic, but checkpointing is not enabled. Switching to NONE semantic.
2020-02-24 18:09:52,414 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] WARN  (FlinkKafkaProducer.java:998) - Using EXACTLY_ONCE semantic, but checkpointing is not enabled. Switching to NONE semantic.
2020-02-24 18:09:52,417 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (TwoPhaseCommitSinkFunction.java:366) - FlinkKafkaProducer 0/4 - no state to restore
2020-02-24 18:09:52,418 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (TwoPhaseCommitSinkFunction.java:366) - FlinkKafkaProducer 1/4 - no state to restore
2020-02-24 18:09:52,419 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (TwoPhaseCommitSinkFunction.java:366) - FlinkKafkaProducer 2/4 - no state to restore
2020-02-24 18:09:52,423 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (TwoPhaseCommitSinkFunction.java:366) - FlinkKafkaProducer 3/4 - no state to restore
2020-02-24 18:09:52,440 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (4/4)] INFO  (HeapKeyedStateBackend.java:140) - Initializing heap keyed state backend with stream factory.
2020-02-24 18:09:52,443 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (4/4)] INFO  (HeapKeyedStateBackend.java:140) - Initializing heap keyed state backend with stream factory.
2020-02-24 18:09:52,443 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (2/4)] INFO  (HeapKeyedStateBackend.java:140) - Initializing heap keyed state backend with stream factory.
2020-02-24 18:09:52,446 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4)] WARN  (FlinkKafkaProducer.java:998) - Using EXACTLY_ONCE semantic, but checkpointing is not enabled. Switching to NONE semantic.
2020-02-24 18:09:52,447 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4)] INFO  (TwoPhaseCommitSinkFunction.java:366) - FlinkKafkaProducer 2/4 - no state to restore
2020-02-24 18:09:52,447 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4)] WARN  (FlinkKafkaProducer.java:998) - Using EXACTLY_ONCE semantic, but checkpointing is not enabled. Switching to NONE semantic.
2020-02-24 18:09:52,447 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4)] INFO  (TwoPhaseCommitSinkFunction.java:366) - FlinkKafkaProducer 1/4 - no state to restore
2020-02-24 18:09:52,447 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4)] WARN  (FlinkKafkaProducer.java:998) - Using EXACTLY_ONCE semantic, but checkpointing is not enabled. Switching to NONE semantic.
2020-02-24 18:09:52,447 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4)] INFO  (TwoPhaseCommitSinkFunction.java:366) - FlinkKafkaProducer 0/4 - no state to restore
2020-02-24 18:09:52,440 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (2/4)] INFO  (HeapKeyedStateBackend.java:140) - Initializing heap keyed state backend with stream factory.
2020-02-24 18:09:52,440 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (3/4)] INFO  (HeapKeyedStateBackend.java:140) - Initializing heap keyed state backend with stream factory.
2020-02-24 18:09:52,442 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (3/4)] INFO  (HeapKeyedStateBackend.java:140) - Initializing heap keyed state backend with stream factory.
2020-02-24 18:09:52,440 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, SumAggregator, PassThroughWindowFunction) -> (Sink: Print to Std. Out, Map) (1/4)] INFO  (HeapKeyedStateBackend.java:140) - Initializing heap keyed state backend with stream factory.
2020-02-24 18:09:52,442 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CalcImplemWindow) -> (Sink: Print to Std. Out, Flat Map, Map) (1/4)] INFO  (HeapKeyedStateBackend.java:140) - Initializing heap keyed state backend with stream factory.
2020-02-24 18:09:52,446 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4)] WARN  (FlinkKafkaProducer.java:998) - Using EXACTLY_ONCE semantic, but checkpointing is not enabled. Switching to NONE semantic.
2020-02-24 18:09:52,453 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4)] INFO  (TwoPhaseCommitSinkFunction.java:366) - FlinkKafkaProducer 3/4 - no state to restore
2020-02-24 18:09:52,472 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4)] INFO  (AbstractConfig.java:347) - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 3600000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2020-02-24 18:09:52,473 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4)] INFO  (AbstractConfig.java:347) - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 3600000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2020-02-24 18:09:52,474 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4)] INFO  (AbstractConfig.java:347) - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 3600000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2020-02-24 18:09:52,473 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (AbstractConfig.java:347) - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 3600000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2020-02-24 18:09:52,478 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4)] INFO  (AbstractConfig.java:347) - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 3600000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2020-02-24 18:09:52,473 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (AbstractConfig.java:347) - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 3600000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2020-02-24 18:09:52,479 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (AbstractConfig.java:347) - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 3600000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2020-02-24 18:09:52,480 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (AbstractConfig.java:347) - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 3600000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2020-02-24 18:09:52,567 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (AppInfoParser.java:117) - Kafka version: 2.4.0
2020-02-24 18:09:52,567 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (AppInfoParser.java:118) - Kafka commitId: 77a89fcf8d7fa018
2020-02-24 18:09:52,568 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (AppInfoParser.java:119) - Kafka startTimeMs: 1582560592562
2020-02-24 18:09:52,570 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (FlinkKafkaProducer.java:1158) - Starting FlinkKafkaInternalProducer (2/4) to produce into default topic flinkout1
2020-02-24 18:09:52,574 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (TypeExtractor.java:1818) - class org.apache.flink.streaming.connectors.kafka.internals.KafkaTopicPartition does not contain a setter for field topic
2020-02-24 18:09:52,574 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (TypeExtractor.java:1857) - Class class org.apache.flink.streaming.connectors.kafka.internals.KafkaTopicPartition cannot be used as a POJO type because not all fields are valid POJO fields, and must be processed as GenericType. Please read the Flink documentation on "Data Types & Serialization" for details of the effect on performance.
2020-02-24 18:09:52,570 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4)] INFO  (AppInfoParser.java:117) - Kafka version: 2.4.0
2020-02-24 18:09:52,583 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4)] INFO  (AppInfoParser.java:118) - Kafka commitId: 77a89fcf8d7fa018
2020-02-24 18:09:52,583 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4)] INFO  (AppInfoParser.java:119) - Kafka startTimeMs: 1582560592565
2020-02-24 18:09:52,585 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (AppInfoParser.java:117) - Kafka version: 2.4.0
2020-02-24 18:09:52,585 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4)] INFO  (FlinkKafkaProducer.java:1158) - Starting FlinkKafkaInternalProducer (3/4) to produce into default topic flinkaggr1
2020-02-24 18:09:52,585 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (AppInfoParser.java:118) - Kafka commitId: 77a89fcf8d7fa018
2020-02-24 18:09:52,586 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (AppInfoParser.java:119) - Kafka startTimeMs: 1582560592565
2020-02-24 18:09:52,586 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (FlinkKafkaProducer.java:1158) - Starting FlinkKafkaInternalProducer (1/4) to produce into default topic flinkout1
2020-02-24 18:09:52,587 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (TypeExtractor.java:1818) - class org.apache.flink.streaming.connectors.kafka.internals.KafkaTopicPartition does not contain a setter for field topic
2020-02-24 18:09:52,587 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (TypeExtractor.java:1857) - Class class org.apache.flink.streaming.connectors.kafka.internals.KafkaTopicPartition cannot be used as a POJO type because not all fields are valid POJO fields, and must be processed as GenericType. Please read the Flink documentation on "Data Types & Serialization" for details of the effect on performance.
2020-02-24 18:09:52,586 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (AppInfoParser.java:117) - Kafka version: 2.4.0
2020-02-24 18:09:52,588 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (AppInfoParser.java:118) - Kafka commitId: 77a89fcf8d7fa018
2020-02-24 18:09:52,588 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (AppInfoParser.java:119) - Kafka startTimeMs: 1582560592565
2020-02-24 18:09:52,589 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (FlinkKafkaProducer.java:1158) - Starting FlinkKafkaInternalProducer (4/4) to produce into default topic flinkout1
2020-02-24 18:09:52,590 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (TypeExtractor.java:1818) - class org.apache.flink.streaming.connectors.kafka.internals.KafkaTopicPartition does not contain a setter for field topic
2020-02-24 18:09:52,590 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (TypeExtractor.java:1857) - Class class org.apache.flink.streaming.connectors.kafka.internals.KafkaTopicPartition cannot be used as a POJO type because not all fields are valid POJO fields, and must be processed as GenericType. Please read the Flink documentation on "Data Types & Serialization" for details of the effect on performance.
2020-02-24 18:09:52,586 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (3/4)] INFO  (HeapKeyedStateBackend.java:140) - Initializing heap keyed state backend with stream factory.
2020-02-24 18:09:52,589 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (AppInfoParser.java:117) - Kafka version: 2.4.0
2020-02-24 18:09:52,590 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (AppInfoParser.java:118) - Kafka commitId: 77a89fcf8d7fa018
2020-02-24 18:09:52,591 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (AppInfoParser.java:119) - Kafka startTimeMs: 1582560592565
2020-02-24 18:09:52,591 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (FlinkKafkaProducer.java:1158) - Starting FlinkKafkaInternalProducer (3/4) to produce into default topic flinkout1
2020-02-24 18:09:52,591 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4)] INFO  (AppInfoParser.java:117) - Kafka version: 2.4.0
2020-02-24 18:09:52,591 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4)] INFO  (AppInfoParser.java:118) - Kafka commitId: 77a89fcf8d7fa018
2020-02-24 18:09:52,592 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4)] INFO  (AppInfoParser.java:119) - Kafka startTimeMs: 1582560592579
2020-02-24 18:09:52,592 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (TypeExtractor.java:1818) - class org.apache.flink.streaming.connectors.kafka.internals.KafkaTopicPartition does not contain a setter for field topic
2020-02-24 18:09:52,592 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (TypeExtractor.java:1857) - Class class org.apache.flink.streaming.connectors.kafka.internals.KafkaTopicPartition cannot be used as a POJO type because not all fields are valid POJO fields, and must be processed as GenericType. Please read the Flink documentation on "Data Types & Serialization" for details of the effect on performance.
2020-02-24 18:09:52,592 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4)] INFO  (AppInfoParser.java:117) - Kafka version: 2.4.0
2020-02-24 18:09:52,592 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4)] INFO  (AppInfoParser.java:118) - Kafka commitId: 77a89fcf8d7fa018
2020-02-24 18:09:52,593 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4)] INFO  (AppInfoParser.java:119) - Kafka startTimeMs: 1582560592579
2020-02-24 18:09:52,593 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4)] INFO  (FlinkKafkaProducer.java:1158) - Starting FlinkKafkaInternalProducer (4/4) to produce into default topic flinkaggr1
2020-02-24 18:09:52,594 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (4/4)] INFO  (HeapKeyedStateBackend.java:140) - Initializing heap keyed state backend with stream factory.
2020-02-24 18:09:52,592 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4)] INFO  (FlinkKafkaProducer.java:1158) - Starting FlinkKafkaInternalProducer (1/4) to produce into default topic flinkaggr1
2020-02-24 18:09:52,593 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4)] INFO  (AppInfoParser.java:117) - Kafka version: 2.4.0
2020-02-24 18:09:52,595 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4)] INFO  (AppInfoParser.java:118) - Kafka commitId: 77a89fcf8d7fa018
2020-02-24 18:09:52,595 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4)] INFO  (AppInfoParser.java:119) - Kafka startTimeMs: 1582560592577
2020-02-24 18:09:52,595 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4)] INFO  (FlinkKafkaProducer.java:1158) - Starting FlinkKafkaInternalProducer (2/4) to produce into default topic flinkaggr1
2020-02-24 18:09:52,596 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (2/4)] INFO  (HeapKeyedStateBackend.java:140) - Initializing heap keyed state backend with stream factory.
2020-02-24 18:09:52,597 [Window(TumblingEventTimeWindows(50000), EventTimeTrigger, CoGroupWindowFunction) -> (Sink: Print to Std. Out, Sink: Unnamed) (1/4)] INFO  (HeapKeyedStateBackend.java:140) - Initializing heap keyed state backend with stream factory.
2020-02-24 18:09:52,678 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (FlinkKafkaConsumerBase.java:886) - Consumer subtask 0 has no restore state.
2020-02-24 18:09:52,678 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (FlinkKafkaConsumerBase.java:886) - Consumer subtask 1 has no restore state.
2020-02-24 18:09:52,678 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (FlinkKafkaConsumerBase.java:886) - Consumer subtask 2 has no restore state.
2020-02-24 18:09:52,679 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (FlinkKafkaConsumerBase.java:886) - Consumer subtask 3 has no restore state.
2020-02-24 18:09:52,691 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (AbstractConfig.java:347) - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = KafkaCsvProducer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2020-02-24 18:09:52,692 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (AbstractConfig.java:347) - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = KafkaCsvProducer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2020-02-24 18:09:52,692 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (AbstractConfig.java:347) - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = KafkaCsvProducer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2020-02-24 18:09:52,697 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (AbstractConfig.java:347) - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = KafkaCsvProducer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2020-02-24 18:09:52,765 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (AppInfoParser.java:117) - Kafka version: 2.4.0
2020-02-24 18:09:52,765 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (AppInfoParser.java:118) - Kafka commitId: 77a89fcf8d7fa018
2020-02-24 18:09:52,766 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (AppInfoParser.java:119) - Kafka startTimeMs: 1582560592765
2020-02-24 18:09:52,766 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (AppInfoParser.java:117) - Kafka version: 2.4.0
2020-02-24 18:09:52,772 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (AppInfoParser.java:118) - Kafka commitId: 77a89fcf8d7fa018
2020-02-24 18:09:52,772 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (AppInfoParser.java:119) - Kafka startTimeMs: 1582560592765
2020-02-24 18:09:52,773 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (AppInfoParser.java:117) - Kafka version: 2.4.0
2020-02-24 18:09:52,776 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (AppInfoParser.java:118) - Kafka commitId: 77a89fcf8d7fa018
2020-02-24 18:09:52,777 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (AppInfoParser.java:119) - Kafka startTimeMs: 1582560592772
2020-02-24 18:09:52,785 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (AppInfoParser.java:117) - Kafka version: 2.4.0
2020-02-24 18:09:52,785 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (AppInfoParser.java:118) - Kafka commitId: 77a89fcf8d7fa018
2020-02-24 18:09:52,785 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (AppInfoParser.java:119) - Kafka startTimeMs: 1582560592773
2020-02-24 18:09:53,165 [kafka-producer-network-thread | producer-4] INFO  (Metadata.java:261) - [Producer clientId=producer-4] Cluster ID: g54BmaOlTjihW0VeJBBMyQ
2020-02-24 18:09:53,165 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (Metadata.java:261) - [Consumer clientId=consumer-KafkaCsvProducer-1, groupId=KafkaCsvProducer] Cluster ID: g54BmaOlTjihW0VeJBBMyQ
2020-02-24 18:09:53,167 [kafka-producer-network-thread | producer-6] INFO  (Metadata.java:261) - [Producer clientId=producer-6] Cluster ID: g54BmaOlTjihW0VeJBBMyQ
2020-02-24 18:09:53,168 [kafka-producer-network-thread | producer-2] INFO  (Metadata.java:261) - [Producer clientId=producer-2] Cluster ID: g54BmaOlTjihW0VeJBBMyQ
2020-02-24 18:09:53,168 [kafka-producer-network-thread | producer-8] INFO  (Metadata.java:261) - [Producer clientId=producer-8] Cluster ID: g54BmaOlTjihW0VeJBBMyQ
2020-02-24 18:09:53,168 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (Metadata.java:261) - [Consumer clientId=consumer-KafkaCsvProducer-2, groupId=KafkaCsvProducer] Cluster ID: g54BmaOlTjihW0VeJBBMyQ
2020-02-24 18:09:53,169 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (Metadata.java:261) - [Consumer clientId=consumer-KafkaCsvProducer-3, groupId=KafkaCsvProducer] Cluster ID: g54BmaOlTjihW0VeJBBMyQ
2020-02-24 18:09:53,168 [kafka-producer-network-thread | producer-3] INFO  (Metadata.java:261) - [Producer clientId=producer-3] Cluster ID: g54BmaOlTjihW0VeJBBMyQ
2020-02-24 18:09:53,169 [kafka-producer-network-thread | producer-1] INFO  (Metadata.java:261) - [Producer clientId=producer-1] Cluster ID: g54BmaOlTjihW0VeJBBMyQ
2020-02-24 18:09:53,169 [kafka-producer-network-thread | producer-7] INFO  (Metadata.java:261) - [Producer clientId=producer-7] Cluster ID: g54BmaOlTjihW0VeJBBMyQ
2020-02-24 18:09:53,168 [kafka-producer-network-thread | producer-5] INFO  (Metadata.java:261) - [Producer clientId=producer-5] Cluster ID: g54BmaOlTjihW0VeJBBMyQ
2020-02-24 18:09:53,171 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (Metadata.java:261) - [Consumer clientId=consumer-KafkaCsvProducer-4, groupId=KafkaCsvProducer] Cluster ID: g54BmaOlTjihW0VeJBBMyQ
2020-02-24 18:09:53,171 [Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (FlinkKafkaConsumerBase.java:651) - Consumer subtask 1 initially has no partitions to read from.
2020-02-24 18:09:53,171 [Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (FlinkKafkaConsumerBase.java:651) - Consumer subtask 2 initially has no partitions to read from.
2020-02-24 18:09:53,171 [Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (FlinkKafkaConsumerBase.java:651) - Consumer subtask 0 initially has no partitions to read from.
2020-02-24 18:09:53,172 [Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (FlinkKafkaConsumerBase.java:604) - Consumer subtask 3 will start reading the following 1 partitions from the earliest offsets: [KafkaTopicPartition{topic='csvtokafka2', partition=0}]
2020-02-24 18:09:53,185 [Legacy Source Thread - Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (FlinkKafkaConsumerBase.java:688) - Consumer subtask 3 creating fetcher with offsets {KafkaTopicPartition{topic='csvtokafka2', partition=0}=-915623761775}.
2020-02-24 18:09:53,192 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (AbstractConfig.java:347) - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = KafkaCsvProducer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2020-02-24 18:09:53,195 [Legacy Source Thread - Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (FlinkKafkaConsumerBase.java:688) - Consumer subtask 1 creating fetcher with offsets {}.
2020-02-24 18:09:53,196 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (AppInfoParser.java:117) - Kafka version: 2.4.0
2020-02-24 18:09:53,201 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (AppInfoParser.java:118) - Kafka commitId: 77a89fcf8d7fa018
2020-02-24 18:09:53,201 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (AppInfoParser.java:119) - Kafka startTimeMs: 1582560593196
2020-02-24 18:09:53,201 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (AbstractConfig.java:347) - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = KafkaCsvProducer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2020-02-24 18:09:53,203 [Legacy Source Thread - Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (FlinkKafkaConsumerBase.java:688) - Consumer subtask 2 creating fetcher with offsets {}.
2020-02-24 18:09:53,203 [Legacy Source Thread - Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (FlinkKafkaConsumerBase.java:688) - Consumer subtask 0 creating fetcher with offsets {}.
2020-02-24 18:09:53,213 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (AbstractConfig.java:347) - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = KafkaCsvProducer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2020-02-24 18:09:53,215 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (KafkaConsumer.java:1123) - [Consumer clientId=consumer-KafkaCsvProducer-5, groupId=KafkaCsvProducer] Subscribed to partition(s): csvtokafka2-0
2020-02-24 18:09:53,216 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (AppInfoParser.java:117) - Kafka version: 2.4.0
2020-02-24 18:09:53,221 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (AppInfoParser.java:118) - Kafka commitId: 77a89fcf8d7fa018
2020-02-24 18:09:53,221 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (1/4)] INFO  (AppInfoParser.java:119) - Kafka startTimeMs: 1582560593216
2020-02-24 18:09:53,220 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (SubscriptionState.java:568) - [Consumer clientId=consumer-KafkaCsvProducer-5, groupId=KafkaCsvProducer] Seeking to EARLIEST offset of partition csvtokafka2-0
2020-02-24 18:09:53,222 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (AppInfoParser.java:117) - Kafka version: 2.4.0
2020-02-24 18:09:53,222 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (AppInfoParser.java:118) - Kafka commitId: 77a89fcf8d7fa018
2020-02-24 18:09:53,222 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (2/4)] INFO  (AppInfoParser.java:119) - Kafka startTimeMs: 1582560593221
2020-02-24 18:09:53,217 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (AbstractConfig.java:347) - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = KafkaCsvProducer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2020-02-24 18:09:53,231 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (AppInfoParser.java:117) - Kafka version: 2.4.0
2020-02-24 18:09:53,231 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (AppInfoParser.java:118) - Kafka commitId: 77a89fcf8d7fa018
2020-02-24 18:09:53,231 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (3/4)] INFO  (AppInfoParser.java:119) - Kafka startTimeMs: 1582560593231
2020-02-24 18:09:53,249 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (Metadata.java:261) - [Consumer clientId=consumer-KafkaCsvProducer-5, groupId=KafkaCsvProducer] Cluster ID: g54BmaOlTjihW0VeJBBMyQ
2020-02-24 18:09:53,259 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (SubscriptionState.java:385) - [Consumer clientId=consumer-KafkaCsvProducer-5, groupId=KafkaCsvProducer] Resetting offset for partition csvtokafka2-0 to offset 0.
2020-02-24 18:09:53,331 [kafka-producer-network-thread | producer-4] WARN  (NetworkClient.java:1063) - [Producer clientId=producer-4] Error while fetching metadata with correlation id 3 : {flinkout1=LEADER_NOT_AVAILABLE}
2020-02-24 18:09:58,279 [Kafka Fetcher for Source: Custom Source -> Flat Map -> Sink: Unnamed (4/4)] INFO  (AbstractCoordinator.java:756) - [Consumer clientId=consumer-KafkaCsvProducer-5, groupId=KafkaCsvProducer] Discovered group coordinator skl:9092 (id: 2147483647 rack: null)
